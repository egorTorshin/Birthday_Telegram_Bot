import telebot
from telebot import types
import json
import re
import datetime
import threading
import time

TOKEN = 'YOUR_BOT_TOKEN'
bot = telebot.TeleBot(TOKEN)

BIRTHDAYS_FILE = "birthdays.json"

# === –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å username ===
def save_user_full(user_id, username, name, birth_date, chat_id):
    try:
        with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
    except FileNotFoundError:
        data = {"users": []}

    for user in data["users"]:
        if user["user_id"] == user_id:
            user["name"] = name
            user["birth_date"] = birth_date
            user["username"] = username
            if chat_id not in user["chats"]:
                user["chats"].append(chat_id)
            break
    else:
        data["users"].append({
            "user_id": user_id,
            "username": username,
            "name": name,
            "birth_date": birth_date,
            "chats": [chat_id]
        })

    with open(BIRTHDAYS_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

# === –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è ===
def delete_profile(message, lang='ru'):
    user_id = message.from_user.id
    try:
        with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
            data = json.load(f)
    except FileNotFoundError:
        data = {"users": []}

    original_len = len(data["users"])
    data["users"] = [user for user in data["users"] if user["user_id"] != user_id]

    with open(BIRTHDAYS_FILE, "w", encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False, indent=2)

    if len(data["users"]) < original_len:
        bot.send_message(message.chat.id,
                         "‚úÖ –í–∞—à –ø—Ä–æ—Ñ–∏–ª—å –±—ã–ª —É–¥–∞–ª—ë–Ω." if lang == 'ru' else "‚úÖ Your profile has been deleted.")
    else:
        bot.send_message(message.chat.id,
                         "‚ÑπÔ∏è –ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω." if lang == 'ru' else "‚ÑπÔ∏è Profile not found.")

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(types.KeyboardButton("üá∑üá∫ –†—É—Å—Å–∫–∏–π"), types.KeyboardButton("üá¨üáß English"))
    bot.send_message(message.chat.id, "üá∑üá∫ –í—ã–±–µ—Ä–∏ —è–∑—ã–∫! / üá¨üáß Choose the language!", reply_markup=markup)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–∞ ===
@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    if message.text == 'üá∑üá∫ –†—É—Å—Å–∫–∏–π':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(
            types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è'),
            types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å')
        )
        bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:', reply_markup=markup)

    elif message.text == 'üá¨üáß English':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        markup.add(
            types.KeyboardButton('Add birthday'),
            types.KeyboardButton('Delete profile')
        )
        bot.send_message(message.chat.id, 'Choose an action:', reply_markup=markup)

    elif message.text == '–î–æ–±–∞–≤–∏—Ç—å –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è':
        msg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ:\n–ò–º—è –§–∞–º–∏–ª–∏—è\n–î–î.–ú–ú.–ì–ì–ì–ì')
        bot.register_next_step_handler(msg, process_birthday_input_ru)

    elif message.text == 'Add birthday':
        msg = bot.send_message(message.chat.id, 'Enter data:\nName Surname\nDD.MM.YYYY')
        bot.register_next_step_handler(msg, process_birthday_input_en)

    elif message.text == '–£–¥–∞–ª–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å':
        delete_profile(message, lang='ru')

    elif message.text == 'Delete profile':
        delete_profile(message, lang='en')

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –î–† –Ω–∞ —Ä—É—Å—Å–∫–æ–º ===
def process_birthday_input_ru(message):
    pattern = r'^([–ê-–Ø–Å–∞-—è—ëA-Za-z]+ [–ê-–Ø–Å–∞-—è—ëA-Za-z]+)\n(\d{2}\.\d{2}\.\d{4})$'
    match = re.match(pattern, message.text.strip())
    if match:
        name = match.group(1)
        birth_date = match.group(2)
        save_user_full(
            user_id=message.from_user.id,
            username=message.from_user.username,
            name=name,
            birth_date=birth_date,
            chat_id=message.chat.id
        )
        bot.send_message(message.chat.id, f'‚úÖ –ü—Ä–∏–Ω—è—Ç–æ: {name}, {birth_date}')
    else:
        msg = bot.send_message(message.chat.id,
            '‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç!\n–ü—Ä–∏–º–µ—Ä:\n–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤\n01.01.2000')
        bot.register_next_step_handler(msg, process_birthday_input_ru)

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –î–† –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º ===
def process_birthday_input_en(message):
    pattern = r'^([A-Za-z]+ [A-Za-z]+)\n(\d{2}\.\d{2}\.\d{4})$'
    match = re.match(pattern, message.text.strip())
    if match:
        name = match.group(1)
        birth_date = match.group(2)
        save_user_full(
            user_id=message.from_user.id,
            username=message.from_user.username,
            name=name,
            birth_date=birth_date,
            chat_id=message.chat.id
        )
        bot.send_message(message.chat.id, f'‚úÖ Accepted: {name}, {birth_date}')
    else:
        msg = bot.send_message(message.chat.id,
            '‚ùå Invalid format!\nExample:\nJohn Smith\n01.01.2000')
        bot.register_next_step_handler(msg, process_birthday_input_en)

# === –ü–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—é ===
def birthday_checker():
    while True:
        now = datetime.datetime.now()
        today = now.strftime("%d.%m")
        try:
            with open(BIRTHDAYS_FILE, "r", encoding="utf-8") as f:
                data = json.load(f)
        except FileNotFoundError:
            data = {"users": []}

        for user in data["users"]:
            birthdate_str = user["birth_date"]
            if birthdate_str[:5] == today:
                for chat_id in user["chats"]:
                    try:
                        username = user.get("username")
                        if username:
                            mention = f"@{username}"
                        else:
                            mention = f"[{user['name']}](tg://user?id={user['user_id']})"

                        bot.send_message(
                            chat_id,
                            f'üéâ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É {mention}! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! ü•≥',
                            parse_mode='Markdown'
                        )
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —á–∞—Ç {chat_id}: {e}")
        time.sleep(86400)  # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑ –≤ —Å—É—Ç–∫–∏

# === –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ —Ñ–æ–Ω–µ ===
t = threading.Thread(target=birthday_checker)
t.daemon = True
t.start()

# === –°—Ç–∞—Ä—Ç –±–æ—Ç–∞ ===
bot.polling(none_stop=True, interval=0)
